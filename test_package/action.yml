name: "Test DPF Package"
description: "Tests the DPF package"
inputs:
  MODULE:
    description: "Module name"
    required: true
    default: post

runs:
  using: "composite"
  steps:
    - name: "Setup headless display"
      uses: pyvista/setup-headless-display-action@v1

    - name: "Install Test Environment"
      shell: bash
      run: |
        pip install -r requirements_test.txt

    - name: "Set TMP"
      shell: bash
      run: |
        echo "TMP=${{ runner.temp }}" >> $GITHUB_ENV
        echo "TEMP=${{ runner.temp }}" >> $GITHUB_ENV
      if: ${{ runner.os }} == "Linux"

    - name: "Test API Docstrings"
      shell: bash
      run: |
        echo "TMP: "$TMP
        echo "TEMP: "$TEMP
        pytest --doctest-modules --durations=10 --durations-min=1.0 --junitxml=junit/test-doctests-results.xml ansys/dpf/${{inputs.MODULE}}

    - name: "Kill all servers"
      uses: pyansys/pydpf-actions/kill-dpf-servers@v2.0

    - name: "Separate long Core tests"
      shell: pwsh
      run: |
        New-Item -Path ".\" -Name "local_server_test" -ItemType "directory"
        Copy-Item -Path "tests\test_local_server.py","tests\test_multi_server.py", "tests\test_workflow.py" -Destination ".\local_server_test\"
        Copy-Item -Path "tests\conftest.py" -Destination ".\local_server_test\conftest.py"
        Remove-Item -Path "tests\test_local_server.py","tests\test_multi_server.py", "tests\test_workflow.py"
      if: ${{inputs.MODULE}} == "core"

    - name: "Test API"
      shell: bash
      run: |
        cd tests
        echo "TMP: "$TMP
        echo "TEMP: "$TEMP
        pytest --durations=10 --durations-min=1.0 --cov=ansys.dpf.${{inputs.MODULE}} --cov-report=xml --cov-report=html --log-level=ERROR --junitxml=junit/test-results.xml --reruns 2 .

    - name: "Test API 2"
      shell: bash
      run: |
        cd ../local_server_test
        pytest --durations=10 --durations-min=1.0 --cov=ansys.dpf.core --cov-report=xml --cov-report=html --cov-append --log-level=ERROR --junitxml=../tests/junit/test-results2.xml --reruns 2 .
      if: ${{inputs.MODULE}} == "core"

    - name: "Kill all servers"
      uses: pyansys/pydpf-actions/kill-dpf-servers@v2.0

    - name: "Upload Docstring Test Results"
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.PACKAGE_NAME }}_doctest
        path: junit/test-doctests-results.xml

    - name: "Upload Test Results"
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.PACKAGE_NAME }}_pytest
        path: tests/junit/test-results.xml

    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v2
