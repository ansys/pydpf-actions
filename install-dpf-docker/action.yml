name: "Install DPF Server"
description: "Install and test DPF Server for different OS and versions"
inputs:
  dpf-standalone-TOKEN:
    description: "github secret to access https://github.com/ansys-dpf/dpf-standalone"
    required: true
  ANSYS_VERSION:
    description: "Ansys release version number in the format 221"
    required: false
    default: "231"
  standalone_suffix:
    description: "Suffix of the branch on standalone"
    required: false
    type: string
    default: ''
outputs:
  SERVER:
    description: "Path to the server"
    value: ${{ steps.set-server-path.outputs.server-path }}
runs:
  using: "composite"
  steps:
   - name: Install zip
     uses: montudor/action-zip@v1

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v2

   - run: |
       echo ${{runner.os}}
       $TEMP = ${{inputs.ANSYS_VERSION}}
       $TEMP2 = $TEMP.ToString()
       $ANSYS_VERSION_WITH_POINT=$TEMP2.Insert(2,".")
       $BranchName = "linux_release-"+$ANSYS_VERSION_WITH_POINT+"${{inputs.standalone_suffix}}"
       
       git clone --branch $BranchName --single-branch https://${{inputs.dpf-standalone-TOKEN}}@github.com/ansys-dpf/dpf-standalone dpf-standalone
       ls dpf-standalone/
      
       cd dpf-standalone
       zip -qq -r ../dpf-standalone_${STANDALONE_PREFIX}_v20${ANSYS_VERSION_WITH_POINT}.0.zip .
       cd ..
       mv dpf-standalone/Dockerfile ./Dockerfile
       rm -r dpf-standalone
       
       echo "DPF_DOCKER=dpfv20${ANSYS_VERSION_WITH_POINT}.0"  | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
       
       echo "docker build -t dpfv20${ANSYS_VERSION_WITH_POINT}.0 --build-arg DPF_VERSION=${{inputs.ANSYS_VERSION}} --build-arg DPF_SERVER_FILE=dpf-standalone_${STANDALONE_PREFIX}_v20${ANSYS_VERSION_WITH_POINT}.0.zip ."
       docker build -t dpfv20${ANSYS_VERSION_WITH_POINT}.0 --build-arg DPF_VERSION=${{inputs.ANSYS_VERSION}} --build-arg DPF_SERVER_FILE=dpf-standalone_${STANDALONE_PREFIX}_v20${ANSYS_VERSION_WITH_POINT}.0.zip .
     shell: pwsh
