name: "Install DPF Server"
description: "Install and test DPF Server for different OS and versions"
inputs:
  dpf-standalone-TOKEN:
    description: "github secret to access https://github.com/ansys-dpf/dpf-standalone"
    required: true
  ANSYS_VERSION:
    description: "Ansys release version number in the format 221"
    required: false
    default: "231"
  standalone_suffix:
    description: "Suffix of the branch on standalone"
    required: false
    type: string
    default: ''
outputs:
  SERVER:
    description: "Path to the server"
    value: ${{ steps.set-server-path.outputs.server-path }}
runs:
  using: "composite"
  steps:
   - name: Install zip
     uses: montudor/action-zip@v1

   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v2

   - run: |
       echo ${{runner.os}}
       $TEMP = ${{inputs.ANSYS_VERSION}}
       $TEMP2 = $TEMP.ToString()
       $ANSYS_VERSION_WITH_POINT=$TEMP2.Insert(2,".")
       $BranchName = "linux_release-"+$ANSYS_VERSION_WITH_POINT+"${{inputs.standalone_suffix}}"
       
       git clone --branch $BranchName --single-branch https://${{inputs.dpf-standalone-TOKEN}}@github.com/ansys-dpf/dpf-standalone dpf-standalone
       ls dpf-standalone/
             
       cd dpf-standalone/ansys/dpf/
       folder_name=`echo *`
       echo "folder_name is $folder_name"
       PATCH_VER=${folder_name:(-4)}
       echo "patch_ver is $PATCH_VER"
       cd ../../../

       cd dpf-standalone
       zip -qq -r ../ansys_dpf_server_${STANDALONE_PREFIX}_v20${ANSYS_VERSION_WITH_POINT}.${PATCH_VER}.zip .
       echo "ls check standalone zip"
       ls .. 
       mv Dockerfile ../Dockerfile
       Get-ChildItem -Path . -Exclude dist | Remove-Item -Recurse -Force
       echo "ls . : "
       ls .
       echo "ls dist : "
       ls dist
       cd ..
       
       echo "DPF_DOCKER=dpfv20${ANSYS_VERSION_WITH_POINT}.${PATCH_VER}"  | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

       echo "docker build -t dpfv20${ANSYS_VERSION_WITH_POINT}.${PATCH_VER} --build-arg DPF_VERSION=${{inputs.ANSYS_VERSION}} ."
       docker build -t dpfv20${ANSYS_VERSION_WITH_POINT}.${PATCH_VER} --build-arg DPF_VERSION=${{inputs.ANSYS_VERSION}} .
     shell: bash
